generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model auth{
  auth_id   Int     @id @default(autoincrement()) @db.UnsignedInt
  username  String  @unique
  email     String  @unique
  password  String
  jurisdiction Int @default(0) @db.UnsignedInt
  user      userinfo?
  post      post[]
  comment   comment[]
}
model post{
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  title     String
  content   String    @db.VarChar(10000)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  views     Int       @default(0) @db.UnsignedInt
  authorId  Int       @db.UnsignedInt
  author    auth      @relation(fields: [authorId], references: [auth_id])
  comment   comment[]
  plateId   Int       @db.UnsignedInt @default(0)
  plate     plate     @relation(fields: [plateId], references: [id])
  isTop     Int       @default(0) @db.UnsignedInt
}
model comment{
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  Int       @db.UnsignedInt
  author    auth      @relation(fields: [authorId], references: [auth_id])
  postId    Int       @db.UnsignedInt
  post      post      @relation(fields: [postId], references: [id])
}

model plate{
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  name      String    @unique
  post      post[]
}
model userinfo{
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  avatar    String 
  nickname  String    @default("")
  github    String    @default("")
  QQ        String    @default("")
  signature String    @default("这个家伙很懒，什么都没留下")
  exp       Int       @default(0) @db.UnsignedInt
  level     Int       @default(0) @db.UnsignedInt
  mapleCoin Int       @default(0) @db.UnsignedInt
  createdAt DateTime  @default(now())
  authId    Int       @unique @db.UnsignedInt
  user      auth      @relation(fields: [authId], references: [auth_id])

}

